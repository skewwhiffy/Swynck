plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
}

jar {
    manifest {
        attributes(
                "Main-Class": "swynck.app.RunKt"
        )
    }
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'java'
apply plugin: 'application'
mainClassName = 'swynck.app.RunKt'

kotlin {
    experimental {
        coroutines 'enable'
    }
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "com.statemachinesystems:envy:1.9"
    compile "org.flywaydb:flyway-core:5.1.4"
    compile "com.h2database:h2:1.4.197"
    compile "org.http4k:http4k-contract:3.32.1"
    compile "org.http4k:http4k-core:3.32.1"
    compile "org.http4k:http4k-client-okhttp:3.32.1"
    compile "org.http4k:http4k-contract:3.32.1"
    compile "org.http4k:http4k-format-jackson:3.32.1"
    compile "org.http4k:http4k-server-undertow:3.32.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.10.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task pack(type: Jar) {
    manifest {
        attributes "Implementation-Title": "Swynck",
                "Implementation-Version": version,
                "Main-Class": "swynck.app.RunKt"
    }
    baseName = project.name + '-packed'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildFrontend(type: Exec) {
    print 'Building frontend...'
    workingDir 'frontend'
    commandLine 'sh', 'build.sh'
    print 'Finished building frontend.'
}

build.dependsOn buildFrontend
